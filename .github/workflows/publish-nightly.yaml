name: Publish Nightly

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  discussions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@d4c94342e560b34958eacfc5d055d21461ed1c5d # v5
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Clean
        run: dotnet clean
      - name: Build Dotnet
        run: dotnet build --no-restore --warnaserror
      - name: "Flag as nightly in build.yaml"
        uses: fjogeleit/yaml-update-action@v0.10.0
        with:
          valueFile: "build.yaml"
          propertyPath: "version"
          value: "0.0.0.${{ github.run_number }}"
          commitChange: false
          updateFile: true

      - name: "JPRM: Build"
        uses: oddstr13/jellyfin-plugin-repository-manager@9497a0a499416cc572ed2e07a391d9f943a37b4d # v1.1.1
        id: jprm
        with:
          version: "0.0.0.${{ github.run_number }}"
          verbosity: debug
          path: .
          dotnet-target: "net8.0"
          output: _dist

      - name: Prepare GitHub Release assets
        run: |-
          pushd _dist
          for file in ./*.zip; do
            md5sum ${file#./} >> ${file%.*}.md5
            sha256sum ${file#./} >> ${file%.*}.sha256
          done
          ls -l
          popd
      - name: Publish output artifacts
        id: publish-assets
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          prerelease: false
          fail_on_unmatched_files: true
          tag_name: nightly
          files: |
            _dist/*
            build.yaml
          body: |
            Nightly build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Plugin Manifest
        uses: Kevinjil/jellyfin-plugin-repo-action@a7832ecc44c6b1a45d531970f6647b8682b005b8
        with:
          ignorePrereleases: true
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          pagesBranch: manifests
          pagesFile: manifest.json
